Collection Interface --->> set, list, queue
set interface -> hashset, linkedhashset, treeset all these tree interfaces implementing directly set interface only treeset first implementing sortedset interface 
and sortedset interface is extending set interface
----------------------------------------------------------------------------------------
list interface -> Arraylist, vector, linkedlist these two interfaces implementing directly list interface but linkedlist along with list interface its also implementing 
queue interface as well 
----------------------------------------------------------------------------------------
queue interface -> linkedlist, priority queue
----------------------------------------------------------------------------------------
map interface is completely diffrent from collection familty its not coming from collection family
map interface -> hashtable, hashmap, linkedhashmap, treemap all these tree interfaces implementing directly map interface only treemap first implementing sortedmap interface 
and sortedmap interface is extending map interface
----------------------------------------------------------------------------------------
object class -> Arrays, and collection class object class is parent class of arrays and collection

----------------------------------------------------------------------------------------
list -> is order base collaction interface it maintane the order, its dynamic array 

set -> is cannot have duplicate elements

queue -> means first in first out FIFO

map -> store the value on the basis of key and value 

iterator -> is used to itarete the values from order base and non order base collections

----------------------------------------------------------------------------------------
common exception while using collection framework 
NullPointerException 
ClassCastException
IllegalArgumentException
IllegalStateException
UnsupportedOperationException  --> it can come when collection cannot be modified 
----------------------------------------------------------------------------------------
<<<<<<<ArrayList>>>>> is maintane the order 01234567 
thats why random access is possible in arraylist, dublicate elements allow, null elements allow, its not thread safe 
thread safe means lets say one thread works on on one object and that thread is preventing another thread to access and work on same thread 
this process is called thread safety


<<<<<<<<LinkedList>>>>> is maintane the order like arraylist but random access is not poosible in linkedlist because linkedlist is store the value in the basis of 
nodes, linkedlist is also not thread safe
differences between arraylist and linkedlist  random access is not possible in linkedlist and arraylist is implementing only list interface but linkedlist 
is implementing list and queue interface both 


<<<<<<threeSet>>>>>> is only order base collection  no null value no dublicate no thread safety no key-value
<<<<<<hashset>>>>>>> is only null element can take  no null value no dublicate no thread safety no key-value no order base 
differennec between hashset and treeset is order base hashset is no 
and in hashset null element storing is allowed but in threeSet no 















A Set is a Collection that cannot contain duplicate elements. 
It models the mathematical set abstraction. 
The Set interface contains only methods inherited 
from Collection and adds the restriction that duplicate elements are prohibited.


list is order base collection -- dynamic array
for example arraylist vector linkedlist

set interface 


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

ArrayList linkedlist --->
 differences arraylist is implementing only list interface, linkedlist is implementing list and queue interface both
 random access is possible arraylist but is not possible in linkedlist 
 both are allow dublicate elements, null element and both are not thread safe 
 
 hashmap doesn't maintane order its key and value pair format hash map random acces possible dublicate not, null value yes, thread safety no
 vector everything is possible even its threat safe it means its synchronized 
 
 hastable and hashmap differences is 
 hashtable is null value is allowed in hashmap but its not allowed in hashtable 
 hashtable is synchcronized but hashmap not hahsmap is not thread safe 

properties file is also kind a collection in java its maintane the value with key and value pair format no ordering no indexing 
random acces is possible and its thread safety its extending hashtable

copyonwritearraylist method to make arraylist threadsafety
concurrenthashmap is the way to make hahsmap threadsafety

there 4 way to achieve synchronization in java 
1 synchronization key word passing along with method or class name 
2 volatile keyword 
3 Atomic variable
4 final keyword


Collection   
ArrayList 
linkedlist
hashSet










